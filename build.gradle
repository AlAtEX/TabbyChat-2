buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies.classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
}

apply plugin: 'forge'

archivesBaseName = "TabbyChat"
version = "$versionMajor.$versionMinor.$versionRevision-beta"
group = "mnm.mods"

configurations.compile {
    exclude group: "org.scala-lang"
    exclude group: "org.scala-lang.plugins"
    exclude group: "com.typesafe"
    exclude group: "com.typesafe.akka"
}

minecraft {
    version = "$mcversion-$fmlversion"
    mappings = "snapshot_20150112"
    runDir = "run"
    // Replace the version string
    replace "@VERSION@", project.version
}
reobf.setSrgMcp()

processResources{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
    inputs.property "revision", versionBuild

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info', 'litemod.json'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version, 'revision':versionBuild
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
        exclude 'litemod.json'
    }
}

System.out.println()
System.out.println("$archivesBaseName $version for Minecraft ${minecraft.version}")
System.out.println()

dependencies{
    // Add util library
    compile project(":MnM-Utils")
}
jar{
    from sourceSets.api.output
    manifest{
        attributes "ModType":"FML,LiteLoader"
        attributes "ModSide":"CLIENT"
    }
}
task jarAPI(type:Jar){
    from sourceSets.api.output
    classifier "api"
}
task jarDev(type:Jar){
    from sourceSets.main.output
    from sourceSets.api.output

    classifier "dev"
}
artifacts{
    archives jarAPI
    archives jarDev
}
