buildscript {
	repositories {
		jcenter()
		maven {
			name = "forge"
			url = "http://files.minecraftforge.net/maven"
		}
	}
	dependencies {
		classpath 'net.minecraftforge.gradle:ForgeGradle:2.0-SNAPSHOT'
	}
}
apply plugin: 'net.minecraftforge.gradle.tweaker-client'

ext {
	utils = rootProject.project(':MnM-Utils')
	api = rootProject.project(':TabbyChat-API')
	forge = rootProject.project(':TabbyChat-Forge')
	common = rootProject.project(':TabbyChat-Common')
	macros = rootProject.project(':macros')

	rev = '0.31'
}
def buildServer = System.env.BUILD_ID != null
group = 'mnm.mods'
archivesBaseName = 'TabbyChat'
version = '2.0.0-beta-SNAPSHOT' + ".$System.env.BUILD_ID"
// version = '2.0.0-beta3.1'
apply from: utils.file('gradle/minecraft.gradle')
minecraft.tweakClass = 'com.mumfrey.liteloader.launch.LiteLoaderTweaker'

allprojects {
	repositories {
		flatDir  {
			dirs rootProject.file('flat')
		}
	}
}
dependencies {
	// for the reobf
	compile project.subprojects
}
jar {
	manifest {
		attributes "ModType":"FML,LiteLoader"
		attributes "ModSide":"CLIENT"
	}
}
task jarSrg(type:Jar) {
	classifier "srg"
	// TODO reobfuscate
}
artifacts.archives jarSrg
// waiting on ForgeGradle#268 (https://github.com/MinecraftForge/ForgeGradle/pull/268)
/*
reobf {
	jarSrg {
		setSrgSrg()
	}
}
*/
afterEvaluate {
	// add content to jars
	evaluationDependsOnChildren()
	jar.from(common.configurations.shade.collect {it.isDirectory() ? it : zipTree(it)}) {
		exclude 'META-INF/***'
	}
	[api, common, forge].each{ proj ->
		[jar,jarSrg]*.from proj.sourceSets.main.output
		sourceJar {
			dependsOn proj.sourceJar
			from zipTree(proj.sourceJar.archivePath)
		}
		proj.reobfJar.enabled = false
	}
	if (buildServer) { // disable extra artifacts on build server
		allprojects {
			tasks.withType(Jar).findAll {
				it.classifier in ['srg', 'sources']
			}*.enabled = false
		}
	}
	def mc = plugins.getPlugin 'net.minecraftforge.gradle.tweaker-client'
	mc.replacer.putReplacement '{RUN_CLIENT_MAIN}', 'com.mumfrey.liteloader.debug.Start'
	mc.replacer.putReplacement '{RUN_CLIENT_TWEAKER}', 'com.mumfrey.liteloader.launch.LiteLoaderTweaker'
}
// find jars and move their destination dir to /build/libs of root project
[utils, macros].each { project ->
	project.afterEvaluate {
		project.tasks.withType(Jar).findAll {
			it.name != 'repackMinecraft'
		}*.destinationDir file('build/libs')
	}
}
